<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- #BeginTemplate "sopc_template.dwt" -->

<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<meta content="IE=Edge" http-equiv="X-UA-Compatible" />
<!-- #BeginEditable "doctitle" -->
<title>Programmable chip</title>
<!-- #EndEditable -->
<!-- #BeginEditable "description" -->
<meta content="insert DESCRIPTION here" name="description" />
<!-- #EndEditable -->
<meta content="en-us" http-equiv="Content-Language" />
<meta content="General" name="rating" />
<meta content="no" http-equiv="imagetoolbar" />
<meta content="Copyright 2015, Pat Geary  http://genealogy-web-creations.com/ All Rights Reserved" name="copyright" />
<!-- 
*********************************
Design by: Genealogy Web Creations
http://www.genealogy-web-creations.com/
Release Date: May 2015
*********************************
-->
<!-- main css -->
<link href="../styles/site.css" rel="stylesheet" type="text/css" />
<!-- media queries css -->
<link href="../styles/media-queries.css" rel="stylesheet" type="text/css" />
<!-- css3-mediaqueries.js for IE less than 9 --><!--[if lt IE 9]>
<script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js">


</script>
<![endif]-->
<meta content="width=device-width; initial-scale=1.0" name="viewport" />
</head>

<body>

<!-- Page Container begins here -->
<div id="outerWrapper">
	<!-- Masthead begins here -->
	<div id="header">
		<img alt="" src="../images/title_pic.png" style="height: 170px; width: 699px" /></div>
	<!-- Masthead ends here -->
	<!-- Top Navigation begins here -->
	<div id="topNavigation">
		<ul>
			<li><a href="../index.html" title="Home">主页</a></li>
			<li><a href="../about.html" title="About">关于</a></li>
			<li><a href="../contact.html" title="Contact">联系</a></li>
			<li><a href="../links.html" title="Links">课程</a></li>
			<li><a href="../search.html" title="Search">搜索</a></li>
			<li><a href="../site-map.html" title="Site Map">站点地图</a></li>
		</ul>
	</div>
	<!-- Top Navigation ends here -->
	<!-- Columns Container begins here -->
	<div id="contentWrapper">
		<!-- Left Sidebar Begins Here	-->
		<div id="leftColumn1">
			<!--	Sectional Menu Begins Here	-->
			<p class="heading">课程</p>
			<ul>
				<li><a href="../sopc/目录.htm" title="SOPC">SOPC</a></li>
				<li><a href="../embeddedsys/coming.html" title="嵌入式系统应用">嵌入式系统应用</a></li>
				<li><a href="../ecircuit/from-name.htm" title="电子线路设计">电子线路设计</a></li>
			</ul>
			
			<!--	Sectional Menu ends Here	-->
			<p class="heading">教学相长</p>
			<p>认真教书，认真学习</p>
		</div>
		<!-- Left Sidebar ends Here	-->
		<!--Main Content Area Begins Here-->
		<div id="content">
			<div style="color: red; background-color: #000000;"  >
					<div id="content1" onclick="document.all.child1.style.display=(document.all.child1.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第一章 概述</div> 
					<div id="child1" align="left" style="display:none"> 
						1.<a href="SOPC基本概念.htm">SOPC系统的基本概念</a> <br> 
						2.<a href="IP-core.htm">IP核</a> <br> 
						3.<a href="sopc-dev-process.htm">SOPC开发基本流程</a> <br> 
						4.<a href="NiosII-introduction.htm">Nios II处理器介绍</a> <br>
						5.<a href="FPGA-implemented-sopc.htm">用FPGA实现SOPC</a><br>
						6.<a href="nios-app.htm">应用</a><br>
					</div> 
					
					<div id="content2" onclick="document.all.child2.style.display=(document.all.child2.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第二章 Nios II处理器体系结构 </div> 
					<div id="child2" align="left" style="display:none"> 
						1.<a href="NiosII-architecture.htm">Nios II处理器结构</a> <br> 
						2.<a href="Nios-architecture/nios-register.htm">Nios II寄存器的配置</a> <br> 
						3.<a href="Nios-architecture/nios-alu.htm">ALU</a> <br>
						4.<a href="Nios-architecture/operating-modes.htm">Nios II处理器运行模式及</a><br>
						  <a href="Nios-architecture/exception.htm">异常和中断</a> <br>
						5.<a href="Nios-architecture/memory.htm">存储器和外设访问</a><br>
						附录：<a href="Nios-architecture/implement-cpu-instruction.htm">计算机指令执行</a><br>
					</div> 
					<div id="content3" onclick="document.all.child3.style.display=(document.all.child3.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第三章 Avalon接口规范 </div> 
					<div id="child3" style="display:none"> 
						1.<a href="avalon/avalon-introduction.htm">Avalon总线简介</a> <br> 
						2.<a href="avalon/avalon-concept.htm">Avalon总线基本概念</a> <br> 
						3.<a href="avalon/avalon-signal.htm">Avalon信号</a>  <br>
						4.<a href="avalon/avalon-slave.htm">从端口传输</a> <br>
						5.<a href="avalon/avalon-master.htm">主端口传输</a> <br>
						6.<a href="avalon/avalon-streaming.htm">流水线传输</a> <br>
						7.<a href="avalon/avalon-tristate.htm">三态传输</a> <br>
					</div> 
					
					<div id="content4" onclick="document.all.child5.style.display=(document.all.child5.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第四章 SOPC软硬件开发平台 </div> 
					<div id="child5" style="display:none"> 
						1.<a href="sopcdevelopment/sopc-dev-platform.htm">SOPC系统开发的软硬件平台</a> <br> 
						2.<a href="#">Quartus II下的SOPC Builder工具</a>(Qsys) <br> 
						3.<a href="#">Nios II IDE集成开发环境</a><br>
						4.<a href="sopcdevelopment/software/HAL/Nios_HAL.htm">软硬件接口的硬件抽象层（HAL)</a><br>
						5.<a href="sopcdevelopment/example-list.htm">例子</a>
					</div> 
					
					<div id="content5" onclick="document.all.child4.style.display=(document.all.child4.style.display =='none')?'':'none'" > 
					第五章 Nios II处理器常用外设 </div> 
					<div id="child4" style="display:none"> 
						1.<a href="#">并行I/O</a>(重点讲解结构) <br> 
						2.<a href="#">定时器</a> <br> 
						3.<a href="#">异步串口UART</a> <br>
						4.<a href="#">Optrex 1207 LCD</a><br>
						5.<a href="sopcdevelopment/devices/SDRAM.htm">SDRAM</a>
					</div> 
					
					<div id="content6" onclick="document.all.child6.style.display=(document.all.child6.style.display =='none')?'':'none'" > 
					第六章 μC/OS II操作系统移植 </div> 
					<div id="child6" style="display:none"> 
						1.<a href="sopcdevelopment/software/os/os.htm">操作系统概念</a> <br> 
						2.<a href="sopcdevelopment/software/os/ucos/first_ucos.htm">μC/OS II运行在Nios II</a> <br> 
						3.<a href="sopcdevelopment/software/os/ucos/ucos_api.htm">μC/OS II编程介绍</a> 
					</div> 
					
					<div id="content8" onclick="document.all.child7.style.display=(document.all.child7.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第七章 Nios II系统深入设计 </div> 
					<div id="child7" style="display:none"> 
						1.<a href="sopcdevelopment/hardware/user_instructions/user_instructions.htm">用户定制指令</a> <br> 
						2.<a href="sopcdevelopment/develop_user_devices.htm">用户定制外设</a> 
					</div>
					
					<div id="content8" onclick="document.all.child8.style.display=(document.all.child8.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第八章 调试技术 </div> 
					<div id="child8" style="display:none"> 
						1.<a href="debug-tech/hardware/ModelSim/modelsim_introduction.htm">ModelSim</a><br>
						2.<a href="debug-tech/hardware/signaltap/signaltap_introduction.htm">SignalTap</a><br>
						3.Nios EDS调试<br> 
					</div> 
			</div>
			<hr/>
			<!-- #BeginEditable "content" -->
			
<p><font size="7">Programmable chip</font></p>
<p><font size="5">固定功能</font><font size="7">To</font><font size="5">可变功能</font></p>
<p><font size="5">1、连接可改变&nbsp; 2、任意功能可表达</font></p>
<table border="1" width="1309">
	<tr>
		<td width="201"><span class="mw-headline" id="Using_a_ROM_as_a_PLD">
		Using a ROM as a PLD</span></td>
		<td width="453">Before PLDs were invented, read-only memory (ROM) chips 
		were used to create arbitrary combinational logic functions of a number 
		of inputs. Consider a ROM with m inputs (the address lines) and n 
		outputs (the data lines). When used as a memory, the ROM contains 2m 
		words of n bits each.</td>
		<td width="633">　</td>
	</tr>
	<tr>
		<td width="201">PLA</td>
		<td width="453">Main article:
		<a title="Programmable logic array" href="https://en.wikipedia.org/wiki/Programmable_logic_array">
		Programmable logic array</a></td>
		<td width="633">In 1970, Texas Instruments developed a
		<font color="#FF0000"><b>mask-programmable</b></font> IC based on the 
		IBM read-only associative memory or ROAM. This device, the TMS2000, was 
		programmed by <b><font color="#FF0000">altering the metal layer during 
		the production of the IC</font></b>. The TMS2000 had up to 17 inputs and 
		18 outputs with 8 JK flip flop for memory. TI coined the term 
		programmable logic array for this device.[2]
		<p>A programmable logic array (PLA) has a programmable AND gate array, 
		which links to a programmable OR gate array, which can then be 
		conditionally complemented to produce an output.</td>
	</tr>
	<tr>
		<td width="201">PAL</td>
		<td width="453">Main article:
		<a title="Programmable array logic" class="mw-redirect" href="https://en.wikipedia.org/wiki/Programmable_array_logic">
		Programmable array logic</a><p>　</td>
		<td width="633">PAL devices have arrays of transistor cells arranged in 
		a "<b><font color="#FF0000">fixed-OR, programmable-AND</font></b>" plane 
		used to implement 
		<font color="#FF0000">"sum-of-products" binary logic equations</font> 
		for each of the outputs in terms of the inputs and either synchronous or 
		asynchronous feedback from the outputs.<p>MMI introduced a breakthrough 
		device in 1978, the
		<a title="Programmable array logic" class="mw-redirect" href="https://en.wikipedia.org/wiki/Programmable_array_logic">
		programmable array logic</a> or PAL. The architecture was simpler than 
		that of Signetics FPLA because it omitted the programmable OR array. 
		This made the parts faster, smaller and cheaper. They were available in 
		20 pin 300 mil DIP packages while the FPLAs came in 28 pin 600 mil 
		packages. The PAL Handbook demystified the design process. The PALASM 
		design software (PAL assembler) converted the engineers' Boolean 
		equations into the fuse pattern required to program the part. The PAL 
		devices were soon
		<a title="Second source" href="https://en.wikipedia.org/wiki/Second_source">
		second-sourced</a> by National Semiconductor, Texas Instruments and AMD.</p>
		<p>After MMI succeeded with the 20-pin PAL parts,
		<a title="AMD" class="mw-redirect" href="https://en.wikipedia.org/wiki/AMD">
		AMD</a> introduced the 24-pin
		<a class="new" title="22V10 (page does not exist)" href="https://en.wikipedia.org/w/index.php?title=22V10&action=edit&redlink=1">
		22V10</a> PAL with additional features. After buying out MMI (1987), AMD 
		spun off a consolidated operation as
		<a title="Vantis" href="https://en.wikipedia.org/wiki/Vantis">Vantis</a>, 
		and that business was acquired by
		<a title="Lattice Semiconductor" href="https://en.wikipedia.org/wiki/Lattice_Semiconductor">
		Lattice Semiconductor</a> in 1999.</td>
	</tr>
	<tr>
		<td width="201">GALs</td>
		<td width="453">Main article:
		<a title="Complex programmable logic device" href="https://en.wikipedia.org/wiki/Complex_programmable_logic_device">
		Complex programmable logic device</a></td>
		<td width="633">An innovation of the PAL was the <b>generic array logic</b> 
		device, or <b>GAL</b>, invented by
		<a title="Lattice Semiconductor" href="https://en.wikipedia.org/wiki/Lattice_Semiconductor">
		Lattice Semiconductor</a> in 1985. This device has the same logical 
		properties as the PAL but can be erased and reprogrammed. The GAL is 
		very useful in the prototyping stage of a design, when any
		<a title="Computer bug" class="mw-redirect" href="https://en.wikipedia.org/wiki/Computer_bug">
		bugs</a> in the logic can be corrected by reprogramming. GALs are 
		programmed and reprogrammed using a PAL programmer, or by using the
		<a title="In-circuit programming" class="mw-redirect" href="https://en.wikipedia.org/wiki/In-circuit_programming">
		in-circuit programming</a> technique on supporting chips.<p>Lattice GALs 
		combine <a title="CMOS" href="https://en.wikipedia.org/wiki/CMOS">CMOS</a> 
		and electrically erasable (E<sup>2</sup>) floating gate technology for a 
		high-speed, low-power logic device.</p>
		<p>A similar device called a <b>PEEL</b> (<b>programmable electrically 
		erasable logic</b>) was introduced by the International CMOS Technology 
		(ICT) corporation.</td>
	</tr>
	<tr>
		<td width="201">CPLDs</td>
		<td width="453">Main article:
		<a title="Complex programmable logic device" href="https://en.wikipedia.org/wiki/Complex_programmable_logic_device">
		Complex programmable logic device</a><p>最小项之和（<a href="参考资料/Disjunctive_normal_form">DNF</a>，sum 
		of products）</p>
		<p>最大项之积(<a href="参考资料/Conjunctive_normal_form">CNF</a>,products of sum)</td>
		<td width="633"><b><font color="#FF0000">PALs and GALs are available 
		only in small sizes, equivalent to a few hundred logic gates</font></b>. 
		For bigger logic circuits, complex PLDs or
		<a title="CPLD" class="mw-redirect" href="https://en.wikipedia.org/wiki/CPLD">
		CPLDs</a> can be used. These contain the equivalent of several PALs 
		linked by programmable interconnections, all in one
		<a title="Integrated circuit" href="https://en.wikipedia.org/wiki/Integrated_circuit">
		integrated circuit</a>. CPLDs can replace <b><font color="#FF0000">
		thousands, or even hundreds of thousands</font></b>, of logic gates.<p>
		Some CPLDs are programmed using a PAL programmer, but this method 
		becomes inconvenient for devices with hundreds of pins. A second method 
		of programming is to solder the device to its printed circuit board, 
		then feed it with a serial data stream from a personal computer. The 
		CPLD contains a circuit that decodes the data stream and configures the 
		CPLD to perform its specified logic function. Some manufacturers 
		(including
		<a title="Altera" href="https://en.wikipedia.org/wiki/Altera">Altera</a> 
		and <a title="Microsemi" href="https://en.wikipedia.org/wiki/Microsemi">
		Microsemi</a>) use
		<a title="Joint Test Action Group" href="https://en.wikipedia.org/wiki/Joint_Test_Action_Group">
		JTAG</a> to program CPLD's in-circuit from
		<a title="Standard Test and Programming Language" href="https://en.wikipedia.org/wiki/Standard_Test_and_Programming_Language">
		.JAM</a> files.</td>
	</tr>
	<tr>
		<td width="201">FPGAs</td>
		<td width="453">Main article:
		<a title="Field-programmable gate array" href="https://en.wikipedia.org/wiki/Field-programmable_gate_array">
		Field-programmable gate array</a></td>
		<td width="633">While PALs were busy developing into GALs and CPLDs (all 
		discussed above), a separate stream of development was happening. This 
		type of device is based on
		<a title="Gate array" href="https://en.wikipedia.org/wiki/Gate_array">
		gate array</a> technology and is called the field-programmable gate 
		array (FPGA). Early examples of FPGAs are the 82s100 array, and 82S105 
		sequencer, by Signetics, introduced in the late 1970s. The 82S100 was an 
		array of AND terms. The 82S105 also had flip flop functions.<p>FPGAs use 
		a grid of logic gates, and once stored, the data doesn't change, similar 
		to that of an ordinary gate array. <b><font color="#FF0000">The term 
		"field-programmable" means the device is programmed by the customer, not 
		the manufacturer.</font></b></p>
		<p>FPGAs are usually programmed after being soldered down to the circuit 
		board, in a manner similar to that of larger CPLDs. In most larger FPGAs 
		the configuration is volatile, and must be re-loaded into the device 
		whenever power is applied or different functionality is required.<b><font color="#FF0000"> 
		Configuration is typically stored in a configuration </font>
		<a title="Programmable read-only memory" href="https://en.wikipedia.org/wiki/Programmable_read-only_memory">
		<font color="#FF0000">PROM</font></a><font color="#FF0000"> or
		</font>
		<a title="EEPROM" href="https://en.wikipedia.org/wiki/EEPROM">
		<font color="#FF0000">EEPROM</font></a><font color="#FF0000">.</font></b> 
		EEPROM versions may be in-system programmable (typically via
		<a title="JTAG" class="mw-redirect" href="https://en.wikipedia.org/wiki/JTAG">
		JTAG</a>).</p>
		<p><b><font color="#FF0000">The difference between FPGAs and CPLDs is 
		that FPGAs are internally based on Look-up tables (LUTs) whereas CPLDs 
		form the logic functions with sea-of-gates (e.g. sum of products).</font></b> 
		CPLDs are meant for simpler designs while FPGAs are meant for more 
		complex designs. In general, CPLDs are a good choice for wide
		<a title="Combinational logic" href="https://en.wikipedia.org/wiki/Combinational_logic">
		combinational logic</a> applications, whereas FPGAs are more suitable 
		for large state machines (i.e. microprocessors).</td>
	</tr>
	<tr>
		<td width="201">　</td>
		<td width="453">　</td>
		<td width="633">　</td>
	</tr>
</table>
<p><font size="5"><a href="参考资料/可编程器件实现方式.htm">可编程器件实现方式</a></font></p>
<h2>参考：FPGA-CPLD基本结构及原理.ppt<img border="0" src="pic/go.png" width="32" height="32"></h2>
<p><span style="font-family: 宋体; font-weight: bold">一、</span><span style="font-family: Times New Roman; font-weight: bold">PLD</span><span style="font-family: 宋体; font-weight: bold">的编程技术</span></p>
<p style="text-align: left; direction: ltr; unicode-bidi: embed; vertical-align: baseline; margin-top: 0pt; margin-bottom: 0pt">
<span style="font-family: 宋体; text-combine: letters; font-weight: bold">（</span><span style="font-family: Times New Roman; text-combine: letters; font-weight: bold">1</span><span style="font-family: 宋体; text-combine: letters; font-weight: bold">）熔丝</span><span style="font-family: Times New Roman; text-combine: letters; font-weight: bold">(Fuse)</span><span style="font-family: 宋体; text-combine: letters; font-weight: bold">和反熔丝</span><span style="font-family: Times New Roman; text-combine: letters; font-weight: bold">(Anti-fuse)</span><span style="font-family: 宋体; text-combine: letters; font-weight: bold">编程技术</span></p>
<p><span style="font-family: 宋体; font-weight: bold">（</span><span style="font-family: Times New Roman; font-weight: bold">2</span><span style="font-family: 宋体; font-weight: bold">）浮栅型电可写紫外线擦除编程技术</span></p>
<p><span style="font-family: 宋体; font-weight: bold">（</span><span style="font-family: Times New Roman; font-weight: bold">3</span><span style="font-family: 宋体; font-weight: bold">）浮栅型电可写电擦除编程技（</span><span style="font-family: Times New Roman; font-weight: bold">E</span><span style="font-family: Times New Roman; font-weight: bold; vertical-align: super">2</span><span style="font-family: Times New Roman; font-weight: bold">PROM</span><span style="font-family: 宋体; font-weight: bold">）</span><span style="font-family: Garamond">
</span></p>
<p><span style="font-family: 宋体; font-weight: bold">（</span><span style="font-family: Times New Roman; font-weight: bold">4</span><span style="font-family: 宋体; font-weight: bold">）</span><span style="font-family: Times New Roman; font-weight: bold">SRAM</span><span style="font-family: 宋体; font-weight: bold">编程技术</span><span style="font-family: Garamond">
</span></p>
<p><span style="font-family: 宋体; font-weight: bold">二、复杂可编程逻辑器件（</span><span style="font-family: Times New Roman; font-weight: bold">CPLD</span><span style="font-family: 宋体; font-weight: bold">）的基本原理</span><span style="font-family: Garamond">
</span></p>
<p><span style="font-family: Times New Roman; font-weight: bold">1</span><span style="font-family: 宋体; font-weight: bold">．可编程逻辑阵列（</span><span style="font-family: Times New Roman; font-weight: bold">LAB</span><span style="font-family: 宋体; font-weight: bold">）</span><span style="font-family: Garamond">
</span></p>
<p><span style="font-family: 宋体; font-weight: bold">（</span><span style="font-family: Times New Roman; font-weight: bold">1</span><span style="font-family: 宋体; font-weight: bold">）乘积项共享结构</span><span style="font-family: Garamond">
</span></p>
<p><span style="font-family: 宋体; font-weight: bold">（</span><span style="font-family: Times New Roman; font-weight: bold">2</span><span style="font-family: 宋体; font-weight: bold">）多触发器结构</span></p>
<p><span style="font-family: 宋体; font-weight: bold">（</span><span style="font-family: Times New Roman; font-weight: bold">3</span><span style="font-family: 宋体; font-weight: bold">）异步时钟</span></p>
<p><span style="font-family: Times New Roman; font-weight: bold">2</span><span style="font-family: 宋体; font-weight: bold">．可编程</span><span style="font-family: Times New Roman; font-weight: bold">I/O</span><span style="font-family: 宋体; font-weight: bold">单元（</span><span style="font-family: Times New Roman; font-weight: bold">IOC</span><span style="font-family: 宋体; font-weight: bold">）</span></p>
<p><span style="font-family: Times New Roman; font-weight: bold">3</span><span style="font-family: 宋体; font-weight: bold">．可编程内部连线（</span><span style="font-family: Times New Roman; font-weight: bold">PIA</span><span style="font-family: 宋体; font-weight: bold">）</span></p>
<p><span style="font-family: 宋体; font-weight: bold">三、现场可编程门阵列（</span><span style="font-family: Times New Roman; font-weight: bold">FPGA</span><span style="font-family: 宋体; font-weight: bold">）的基本原理</span><span style="font-family: Garamond">
</span></p>
<p><span style="font-family: Times New Roman; font-weight: bold">1</span><span style="font-family: 宋体; font-weight: bold">．可编程逻辑块（</span><span style="font-family: Times New Roman; font-weight: bold">CLB</span><span style="font-family: 宋体; font-weight: bold">）</span><span style="font-family: Garamond">
</span></p>
<p style="text-align: left; direction: ltr; unicode-bidi: embed; vertical-align: baseline; margin-top: 0pt; margin-bottom: 0pt">
<span style="font-family: Times New Roman; text-combine: letters; font-weight: bold">
2</span><span style="font-family: 宋体; text-combine: letters; font-weight: bold">．输入</span><span style="font-family: Times New Roman; text-combine: letters; font-weight: bold">/</span><span style="font-family: 宋体; text-combine: letters; font-weight: bold">输出模块（</span><span style="font-family: Times New Roman; text-combine: letters; font-weight: bold">IOB</span><span style="font-family: 宋体; text-combine: letters; font-weight: bold">）</span></p>
<p><span style="font-family: Times New Roman; font-weight: bold">3</span><span style="font-family: 宋体; font-weight: bold">．可编程互连资源（</span><span style="font-family: Times New Roman; font-weight: bold">PIR</span><span style="font-family: 宋体; font-weight: bold">）</span></p>

			<!-- #EndEditable --></div>
		<!--Main Content Area Ends Here--></div>
	<!-- Columns Container ends here -->
	<!-- Footer begins here -->
	<div id="footer">
		
		<p class="smltxt">模板来自于:
		<a href="http://www.genealogy-web-creations.com/" title="Genealogy Web Creations.">
		Genealogy Web Creations</a> </p>
		<p class="smltxt">Template Updated: May 2015 </p>
		<p class="smltxt"><a href="http://www.miitbeian.gov.cn/" title="备案后">京ICP备15041520号</a></p>
	</div>
	<!-- Footer ends here -->
	<!-- Page Container ends here --></div>

</body>

<!-- #EndTemplate -->

</html>
