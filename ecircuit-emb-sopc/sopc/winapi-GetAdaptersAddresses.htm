<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- #BeginTemplate "sopc_template.dwt" -->

<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<meta content="IE=Edge" http-equiv="X-UA-Compatible" />
<!-- #BeginEditable "doctitle" -->
<title>GetAdaptersAddresses function</title>
<!-- #EndEditable -->
<!-- #BeginEditable "description" -->
<meta content="insert DESCRIPTION here" name="description" />
<!-- #EndEditable -->
<meta content="en-us" http-equiv="Content-Language" />
<meta content="General" name="rating" />
<meta content="no" http-equiv="imagetoolbar" />
<meta content="Copyright 2015, Pat Geary  http://genealogy-web-creations.com/ All Rights Reserved" name="copyright" />
<!-- 
*********************************
Design by: Genealogy Web Creations
http://www.genealogy-web-creations.com/
Release Date: May 2015
*********************************
-->
<!-- main css -->
<link href="../styles/site.css" rel="stylesheet" type="text/css" />
<!-- media queries css -->
<link href="../styles/media-queries.css" rel="stylesheet" type="text/css" />
<!-- css3-mediaqueries.js for IE less than 9 --><!--[if lt IE 9]>
<script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js">


</script>
<![endif]-->
<meta content="width=device-width; initial-scale=1.0" name="viewport" />
</head>

<body>

<!-- Page Container begins here -->
<div id="outerWrapper">
	<!-- Masthead begins here -->
	<div id="header">
		<img alt="" src="../images/title_pic.png" style="height: 170px; width: 699px" /></div>
	<!-- Masthead ends here -->
	<!-- Top Navigation begins here -->
	<div id="topNavigation">
		<ul>
			<li><a href="../index.html" title="Home">主页</a></li>
			<li><a href="../about.html" title="About">关于</a></li>
			<li><a href="../contact.html" title="Contact">联系</a></li>
			<li><a href="../links.html" title="Links">课程</a></li>
			<li><a href="../search.html" title="Search">搜索</a></li>
			<li><a href="../site-map.html" title="Site Map">站点地图</a></li>
		</ul>
	</div>
	<!-- Top Navigation ends here -->
	<!-- Columns Container begins here -->
	<div id="contentWrapper">
		<!-- Left Sidebar Begins Here	-->
		<div id="leftColumn1">
			<!--	Sectional Menu Begins Here	-->
			<p class="heading">课程</p>
			<ul>
				<li><a href="../sopc/目录.htm" title="SOPC">SOPC</a></li>
				<li><a href="../embeddedsys/coming.html" title="嵌入式系统应用">嵌入式系统应用</a></li>
				<li><a href="../ecircuit/from-name.htm" title="电子线路设计">电子线路设计</a></li>
			</ul>
			
			<!--	Sectional Menu ends Here	-->
			<p class="heading">教学相长</p>
			<p>认真教书，认真学习</p>
		</div>
		<!-- Left Sidebar ends Here	-->
		<!--Main Content Area Begins Here-->
		<div id="content">
			<div style="color: red; background-color: #000000;"  >
					<div id="content1" onclick="document.all.child1.style.display=(document.all.child1.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第一章 概述</div> 
					<div id="child1" align="left" style="display:none"> 
						1.<a href="SOPC基本概念.htm">SOPC系统的基本概念</a> <br> 
						2.<a href="IP-core.htm">IP核</a> <br> 
						3.<a href="sopc-dev-process.htm">SOPC开发基本流程</a> <br> 
						4.<a href="NiosII-introduction.htm">Nios II处理器介绍</a> <br>
						5.<a href="FPGA-implemented-sopc.htm">用FPGA实现SOPC</a><br>
						6.<a href="nios-app.htm">应用</a><br>
					</div> 
					
					<div id="content2" onclick="document.all.child2.style.display=(document.all.child2.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第二章 Nios II处理器体系结构 </div> 
					<div id="child2" align="left" style="display:none"> 
						1.<a href="NiosII-architecture.htm">Nios II处理器结构</a> <br> 
						2.<a href="Nios-architecture/nios-register.htm">Nios II寄存器的配置</a> <br> 
						3.<a href="Nios-architecture/nios-alu.htm">ALU</a> <br>
						4.<a href="Nios-architecture/operating-modes.htm">Nios II处理器运行模式及</a><br>
						  <a href="Nios-architecture/exception.htm">异常和中断</a> <br>
						5.<a href="Nios-architecture/memory.htm">存储器和外设访问</a><br>
						附录：<a href="Nios-architecture/implement-cpu-instruction.htm">计算机指令执行</a><br>
					</div> 
					<div id="content3" onclick="document.all.child3.style.display=(document.all.child3.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第三章 Avalon接口规范 </div> 
					<div id="child3" style="display:none"> 
						1.<a href="avalon/avalon-introduction.htm">Avalon总线简介</a> <br> 
						2.<a href="avalon/avalon-concept.htm">Avalon总线基本概念</a> <br> 
						3.<a href="avalon/avalon-signal.htm">Avalon信号</a>  <br>
						4.<a href="avalon/avalon-slave.htm">从端口传输</a> <br>
						5.<a href="avalon/avalon-master.htm">主端口传输</a> <br>
						6.<a href="avalon/avalon-streaming.htm">流水线传输</a> <br>
						7.<a href="avalon/avalon-tristate.htm">三态传输</a> <br>
					</div> 
					
					<div id="content4" onclick="document.all.child5.style.display=(document.all.child5.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第四章 SOPC软硬件开发平台 </div> 
					<div id="child5" style="display:none"> 
						1.<a href="sopcdevelopment/sopc-dev-platform.htm">SOPC系统开发的软硬件平台</a> <br> 
						2.<a href="#">Quartus II下的SOPC Builder工具</a>(Qsys) <br> 
						3.<a href="#">Nios II IDE集成开发环境</a><br>
						4.<a href="sopcdevelopment/software/HAL/Nios_HAL.htm">软硬件接口的硬件抽象层（HAL)</a><br>
						5.<a href="sopcdevelopment/example-list.htm">例子</a>
					</div> 
					
					<div id="content5" onclick="document.all.child4.style.display=(document.all.child4.style.display =='none')?'':'none'" > 
					第五章 Nios II处理器常用外设 </div> 
					<div id="child4" style="display:none"> 
						1.<a href="#">并行I/O</a>(重点讲解结构) <br> 
						2.<a href="#">定时器</a> <br> 
						3.<a href="#">异步串口UART</a> <br>
						4.<a href="#">Optrex 1207 LCD</a><br>
						5.<a href="sopcdevelopment/devices/SDRAM.htm">SDRAM</a>
					</div> 
					
					<div id="content6" onclick="document.all.child6.style.display=(document.all.child6.style.display =='none')?'':'none'" > 
					第六章 μC/OS II操作系统移植 </div> 
					<div id="child6" style="display:none"> 
						1.<a href="sopcdevelopment/software/os/os.htm">操作系统概念</a> <br> 
						2.<a href="sopcdevelopment/software/os/ucos/first_ucos.htm">μC/OS II运行在Nios II</a> <br> 
						3.<a href="sopcdevelopment/software/os/ucos/ucos_api.htm">μC/OS II编程介绍</a> 
					</div> 
					
					<div id="content8" onclick="document.all.child7.style.display=(document.all.child7.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第七章 Nios II系统深入设计 </div> 
					<div id="child7" style="display:none"> 
						1.<a href="sopcdevelopment/hardware/user_instructions/user_instructions.htm">用户定制指令</a> <br> 
						2.<a href="sopcdevelopment/develop_user_devices.htm">用户定制外设</a> 
					</div>
					
					<div id="content8" onclick="document.all.child8.style.display=(document.all.child8.style.display =='none')?'':'none'" > 
					<font face="楷体" size="4">第八章 调试技术 </div> 
					<div id="child8" style="display:none"> 
						1.<a href="debug-tech/hardware/ModelSim/modelsim_introduction.htm">ModelSim</a><br>
						2.<a href="debug-tech/hardware/signaltap/signaltap_introduction.htm">SignalTap</a><br>
						3.Nios EDS调试<br> 
					</div> 
			</div>
			<hr/>
			<!-- #BeginEditable "content" -->
			
<div id="page" sizcache0647579587596997="3.718281828459045 2 0" sizset="false">
	<div id="body" sizcache0647579587596997="3.718281828459045 2 96" sizset="false">
		<div id="content9" class="content" sizcache0647579587596997="3.718281828459045 2 103" sizset="false">
			<div class="topic" xmlns="http://www.w3.org/1999/xhtml" sizcache0647579587596997="3.718281828459045 2 103" sizset="false">
				<h1 class="title">GetAdaptersAddresses function</h1>
				<div id="mainSection" sizcache0647579587596997="3.718281828459045 2 103" sizset="false">
					<div class="clsServerSDKContent">
						　</div>
					<p>The <strong>GetAdaptersAddresses</strong> function 
					retrieves the addresses associated with the adapters on the 
					local computer.</p>
					<h2>Syntax</h2>
					<div id="code-snippet-1" class="codeSnippetContainer" xmlns="" sizcache0647579587596997="3.718281828459045 2 103" sizset="false">
						<div class="codeSnippetContainerTabs" sizcache0647579587596997="3.718281828459045 2 103" sizset="false">
							<div dir="ltr" class="codeSnippetContainerTabSingle" sizcache0647579587596997="3.718281828459045 2 103" sizset="false">
								<a>C++</a></div>
						</div>
						<div class="codeSnippetContainerCodeContainer" sizcache0647579587596997="3.718281828459045 2 104" sizset="false">
							<div class="codeSnippetToolBar" sizcache0647579587596997="3.718281828459045 2 104" sizset="false">
								<div class="codeSnippetToolBarText" sizcache0647579587596997="3.718281828459045 2 104" sizset="false">
									<a style="display: none" title="复制到剪贴板。" name="CodeSnippetCopyLink" href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_90c5ad91-fd90-4431-bb32-fb5eac55ab8c');">
									复制</a> </div>
							</div>
							<div dir="ltr" id="CodeSnippetContainerCode_90c5ad91-fd90-4431-bb32-fb5eac55ab8c" class="codeSnippetContainerCode">
								<div style="color: black">
									<pre>ULONG WINAPI GetAdaptersAddresses(
  _In_&nbsp;&nbsp;&nbsp;&nbsp;ULONG &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Family,
  _In_&nbsp;&nbsp;&nbsp;&nbsp;ULONG &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Flags,
  _In_&nbsp;&nbsp;&nbsp;&nbsp;PVOID &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reserved,
  _Inout_&nbsp;PIP_ADAPTER_ADDRESSES AdapterAddresses,
  _Inout_&nbsp;PULONG &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SizePointer
);

</pre>
								</div>
							</div>
						</div>
					</div>
					<h2>Parameters</h2>
					<dl sizcache0647579587596997="3.718281828459045 2 105" sizset="false">
						<dt><em>Family</em> [in]</dt>
						<dd sizcache0647579587596997="3.718281828459045 2 105" sizset="false">
						The address family of the addresses to retrieve. This 
						parameter must be one of the following values.<table sizcache0647579587596997="3.718281828459045 2 105" sizset="false">
							<tbody sizcache0647579587596997="3.718281828459045 2 105" sizset="false">
								<tr>
									<th>Value</th>
									<th>Meaning</th>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 105" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 105" sizset="false">
									<a id="AF_UNSPEC"></a><a id="af_unspec0"></a>
									<dl>
										<dt><strong>AF_UNSPEC</strong></dt>
										<dt>0</dt>
									</dl>
									</td>
									<td>Return both IPv4 and IPv6 addresses 
									associated with adapters with IPv4 or IPv6 
									enabled.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 107" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 107" sizset="false">
									<a id="AF_INET"></a><a id="af_inet7"></a>
									<dl>
										<dt><strong>AF_INET</strong></dt>
										<dt>2</dt>
									</dl>
									</td>
									<td>Return only IPv4 addresses associated 
									with adapters with IPv4 enabled.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 109" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 109" sizset="false">
									<a id="AF_INET6"></a><a id="af_inet8"></a>
									<dl>
										<dt><strong>AF_INET6</strong></dt>
										<dt>23</dt>
									</dl>
									</td>
									<td>Return only IPv6 addresses associated 
									with adapters with IPv6 enabled.</td>
								</tr>
						</table>
						<p>&nbsp;</dd>
						<dt><em>Flags</em> [in]</dt>
						<dd sizcache0647579587596997="3.718281828459045 2 111" sizset="false">
						The type of addresses to retrieve. The possible values 
						are defined in the <em>Iptypes.h</em> header file. Note 
						that the <em>Iptypes.h</em> header file is automatically 
						included in <em>Iphlpapi.h</em>, and should never be 
						used directly.<p>This parameter is a combination of the 
						following values. If this parameter is zero, then 
						unicast, anycast, and multicast IP addresses will be 
						returned.</p>
						<table sizcache0647579587596997="3.718281828459045 2 111" sizset="false">
							<tbody sizcache0647579587596997="3.718281828459045 2 111" sizset="false">
								<tr>
									<th>Value</th>
									<th>Meaning</th>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 111" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 111" sizset="false">
									<a id="GAA_FLAG_SKIP_UNICAST"></a>
									<a id="gaa_flag_skip_unicast0"></a>
									<dl>
										<dt><strong>GAA_FLAG_SKIP_UNICAST</strong></dt>
										<dt>0x0001</dt>
									</dl>
									</td>
									<td>Do not return unicast addresses.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 113" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 113" sizset="false">
									<a id="GAA_FLAG_SKIP_ANYCAST"></a>
									<a id="gaa_flag_skip_anycast0"></a>
									<dl>
										<dt><strong>GAA_FLAG_SKIP_ANYCAST</strong></dt>
										<dt>0x0002</dt>
									</dl>
									</td>
									<td>Do not return IPv6 anycast addresses.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 115" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 115" sizset="false">
									<a id="GAA_FLAG_SKIP_MULTICAST"></a>
									<a id="gaa_flag_skip_multicast0"></a>
									<dl>
										<dt><strong>GAA_FLAG_SKIP_MULTICAST</strong></dt>
										<dt>0x0004</dt>
									</dl>
									</td>
									<td>Do not return multicast addresses.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 117" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 117" sizset="false">
									<a id="GAA_FLAG_SKIP_DNS_SERVER"></a>
									<a id="gaa_flag_skip_dns_server0"></a>
									<dl>
										<dt><strong>GAA_FLAG_SKIP_DNS_SERVER</strong></dt>
										<dt>0x0008</dt>
									</dl>
									</td>
									<td>Do not return addresses of DNS servers.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 119" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 119" sizset="false">
									<a id="GAA_FLAG_INCLUDE_PREFIX"></a>
									<a id="gaa_flag_include_prefix0"></a>
									<dl>
										<dt><strong>GAA_FLAG_INCLUDE_PREFIX</strong></dt>
										<dt>0x0010</dt>
									</dl>
									</td>
									<td>Return a list of IP address prefixes on 
									this adapter. When this flag is set, IP 
									address prefixes are returned for both IPv6 
									and IPv4 addresses.
									<p>This flag is supported on Windows&nbsp;XP with 
									SP1 and later.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 121" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 121" sizset="false">
									<a id="GAA_FLAG_SKIP_FRIENDLY_NAME"></a>
									<a id="gaa_flag_skip_friendly_name0"></a>
									<dl>
										<dt><strong>GAA_FLAG_SKIP_FRIENDLY_NAME</strong></dt>
										<dt>0x0020</dt>
									</dl>
									</td>
									<td>Do not return the adapter friendly name.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 123" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 123" sizset="false">
									<a id="GAA_FLAG_INCLUDE_WINS_INFO"></a>
									<a id="gaa_flag_include_wins_info0"></a>
									<dl>
										<dt><strong>GAA_FLAG_INCLUDE_WINS_INFO</strong></dt>
										<dt>0x0040</dt>
									</dl>
									</td>
									<td>Return addresses of Windows Internet 
									Name Service (WINS) servers.
									<p>This flag is supported on Windows&nbsp;Vista 
									and later.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 125" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 125" sizset="false">
									<a id="GAA_FLAG_INCLUDE_GATEWAYS"></a>
									<a id="gaa_flag_include_gateways0"></a>
									<dl>
										<dt><strong>GAA_FLAG_INCLUDE_GATEWAYS</strong></dt>
										<dt>0x0080</dt>
									</dl>
									</td>
									<td>Return the addresses of default 
									gateways.
									<p>This flag is supported on Windows&nbsp;Vista 
									and later.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 127" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 127" sizset="false">
									<a id="GAA_FLAG_INCLUDE_ALL_INTERFACES"></a>
									<a id="gaa_flag_include_all_interfaces0"></a>
									<dl>
										<dt><strong>
										GAA_FLAG_INCLUDE_ALL_INTERFACES</strong></dt>
										<dt>0x0100</dt>
									</dl>
									</td>
									<td>Return addresses for all NDIS 
									interfaces.
									<p>This flag is supported on Windows&nbsp;Vista 
									and later.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 129" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 129" sizset="false">
									<a id="GAA_FLAG_INCLUDE_ALL_COMPARTMENTS">
									</a>
									<a id="gaa_flag_include_all_compartments0">
									</a>
									<dl>
										<dt><strong>
										GAA_FLAG_INCLUDE_ALL_COMPARTMENTS</strong></dt>
										<dt>0x0200</dt>
									</dl>
									</td>
									<td>Return addresses in all routing 
									compartments.
									<p>This flag is not currently supported and 
									reserved for future use.</td>
								</tr>
								<tr sizcache0647579587596997="3.718281828459045 2 131" sizset="false">
									<td sizcache0647579587596997="3.718281828459045 2 131" sizset="false">
									<a id="GAA_FLAG_INCLUDE_TUNNEL_BINDINGORDER">
									</a>
									<a id="gaa_flag_include_tunnel_bindingorder0">
									</a>
									<dl>
										<dt><strong>
										GAA_FLAG_INCLUDE_TUNNEL_BINDINGORDER</strong></dt>
										<dt>0x0400</dt>
									</dl>
									</td>
									<td>Return the adapter addresses sorted in 
									tunnel binding order. This flag is supported 
									on Windows&nbsp;Vista and later.</td>
								</tr>
						</table>
						<p>&nbsp;</dd>
						<dt><em>Reserved</em> [in]</dt>
						<dd>This parameter is not currently used, but is 
						reserved for future system use. The calling application 
						should pass <strong>NULL</strong> for this parameter.
						</dd>
						<dt><em>AdapterAddresses</em> [in, out]</dt>
						<dd sizcache0647579587596997="3.718281828459045 2 133" sizset="false">
						<p sizcache0647579587596997="3.718281828459045 2 133" sizset="false">
						A pointer to a buffer that contains a linked list of
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">
						IP_ADAPTER_ADDRESSES</strong></a> structures on 
						successful return. </dd>
						<dt><em>SizePointer</em> [in, out]</dt>
						<dd>A pointer to a variable that specifies the size of 
						the buffer pointed to by <em>AdapterAddresses</em>.</dd>
					</dl>
					<h2>Return value</h2>
					<p>If the function succeeds, the return value is <strong>
					ERROR_SUCCESS</strong> (defined to the same value as <strong>
					NO_ERROR</strong>).</p>
					<p>If the function fails, the return value is one of the 
					following error codes.</p>
					<table sizcache0647579587596997="3.718281828459045 2 134" sizset="false">
						<tbody sizcache0647579587596997="3.718281828459045 2 134" sizset="false">
							<tr>
								<th>Return code</th>
								<th>Description</th>
							</tr>
							<tr>
								<td>
								<dl>
									<dt><strong>ERROR_ADDRESS_NOT_ASSOCIATED</strong></dt>
								</dl>
								</td>
								<td>An address has not yet been associated with 
								the network endpoint. DHCP lease information was 
								available.</td>
							</tr>
							<tr>
								<td>
								<dl>
									<dt><strong>ERROR_BUFFER_OVERFLOW</strong></dt>
								</dl>
								</td>
								<td>The buffer size indicated by the <em>
								SizePointer</em> parameter is too small to hold 
								the adapter information or the <em>
								AdapterAddresses</em> parameter is <strong>NULL</strong>. 
								The <em>SizePointer</em> parameter returned 
								points to the required size of the buffer to 
								hold the adapter information.</td>
							</tr>
							<tr>
								<td>
								<dl>
									<dt><strong>ERROR_INVALID_PARAMETER</strong></dt>
								</dl>
								</td>
								<td>One of the parameters is invalid. This error 
								is returned for any of the following conditions: 
								the <em>SizePointer</em> parameter is <strong>
								NULL</strong>, the <em>Address</em> parameter is 
								not <strong>AF_INET</strong>, <strong>AF_INET6</strong>, 
								or <strong>AF_UNSPEC</strong>, or the address 
								information for the parameters requested is 
								greater than <strong>ULONG_MAX</strong>.</td>
							</tr>
							<tr>
								<td>
								<dl>
									<dt><strong>ERROR_NOT_ENOUGH_MEMORY</strong></dt>
								</dl>
								</td>
								<td>Insufficient memory resources are available 
								to complete the operation.</td>
							</tr>
							<tr>
								<td>
								<dl>
									<dt><strong>ERROR_NO_DATA</strong></dt>
								</dl>
								</td>
								<td>No addresses were found for the requested 
								parameters.</td>
							</tr>
							<tr sizcache0647579587596997="3.718281828459045 2 134" sizset="false">
								<td>
								<dl>
									<dt><strong>Other</strong></dt>
								</dl>
								</td>
								<td sizcache0647579587596997="3.718281828459045 2 134" sizset="false">
								<p sizcache0647579587596997="3.718281828459045 2 134" sizset="false">
								Use
								<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/ms679351(v=vs.85).aspx">
								<strong xmlns="http://www.w3.org/1999/xhtml">
								FormatMessage</strong></a> to obtain the message 
								string for the returned error.</td>
							</tr>
					</table>
					<p>&nbsp;</p>
					<h2>Remarks</h2>
					<p>The <strong>GetAdaptersAddresses</strong> function can 
					retrieve information for IPv4 and IPv6 addresses. </p>
					<p sizcache0647579587596997="3.718281828459045 2 135" sizset="false">
					Addresses are returned as a linked list of
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">
					IP_ADAPTER_ADDRESSES</strong></a> structures in the buffer 
					pointed to by the <em>AdapterAddresses</em> parameter. The 
					application that calls the <strong>GetAdaptersAddresses</strong> 
					function must allocate the amount of memory needed to return 
					the <strong>IP_ADAPTER_ADDRESSES</strong> structures pointed 
					to by the <em>AdapterAddresses</em> parameter. When these 
					returned structures are no longer required, the application 
					should free the memory allocated. This can be accomplished 
					by calling the
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366597(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">HeapAlloc</strong></a> 
					function to allocate memory and later calling the
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366701(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">HeapFree</strong></a> 
					function to free the allocated memory, as shown in the 
					example code. Other memory allocation and free functions can 
					be used as long as the same family of functions are used for 
					both the allocation and the free function.</p>
					<p><strong>GetAdaptersAddresses</strong> is implemented only 
					as a synchronous function call. The <strong>
					GetAdaptersAddresses</strong> function requires a 
					significant amount of network resources and time to complete 
					since all of the low-level network interface tables must be 
					traversed. </p>
					<p sizcache0647579587596997="3.718281828459045 2 138" sizset="false">
					One method that can be used to determine the memory needed 
					to return the
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">
					IP_ADAPTER_ADDRESSES</strong></a> structures pointed to by 
					the <em>AdapterAddresses</em> parameter is to pass too small 
					a buffer size as indicated in the <em>SizePointer</em> 
					parameter in the first call to the <strong>
					GetAdaptersAddresses</strong> function, so the function will 
					fail with <strong>ERROR_BUFFER_OVERFLOW</strong>. When the 
					return value is <strong>ERROR_BUFFER_OVERFLOW</strong>, the
					<em>SizePointer</em> parameter returned points to the 
					required size of the buffer to hold the adapter information. 
					Note that it is possible for the buffer size required for 
					the <strong>IP_ADAPTER_ADDRESSES</strong> structures pointed 
					to by the <em>AdapterAddresses</em> parameter to change 
					between subsequent calls to the <strong>GetAdaptersAddresses</strong> 
					function if an adapter address is added or removed. However, 
					this method of using the <strong>GetAdaptersAddresses</strong> 
					function is strongly discouraged. This method requires 
					calling the <strong>GetAdaptersAddresses</strong> function 
					multiple times. </p>
					<p>The recommended method of calling the <strong>
					GetAdaptersAddresses</strong> function is to pre-allocate a 
					15KB working buffer pointed to by the <em>AdapterAddresses</em> 
					parameter. On typical computers, this dramatically reduces 
					the chances that the <strong>GetAdaptersAddresses</strong> 
					function returns <strong>ERROR_BUFFER_OVERFLOW</strong>, 
					which would require calling <strong>GetAdaptersAddresses</strong> 
					function multiple times. The example code illustrates this 
					method of use. </p>
					<p>The order in which adapters appear in the list returned 
					by this function can be controlled from the Network 
					Connections folder: select the Advanced Settings menu item 
					from the Advanced menu.</p>
					<p>If the GAA_FLAG_INCLUDE_ALL_INTERFACES is set, then all 
					NDIS adapters will be retrieved even those addresses 
					associated with adapters not bound to an address family 
					specified in the <em>Family</em> parameter. When this flag 
					is not set, then only the addresses that are bound to an 
					adapter enabled for the address family specified in the <em>
					Family</em> parameter are returned.</p>
					<p sizcache0647579587596997="3.718281828459045 2 139" sizset="false">
					The size of the
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">
					IP_ADAPTER_ADDRESSES</strong></a> structure was changed on 
					Windows&nbsp;XP with Service Pack&nbsp;1 (SP1) and later. Several 
					additional members were added to this structure. The size of 
					the <strong>IP_ADAPTER_ADDRESSES</strong> structure was also 
					changed on Windows&nbsp;Vista and later. A number of additional 
					members were added to this structure. The size of the
					<strong>IP_ADAPTER_ADDRESSES</strong> structure also changed 
					on Windows&nbsp;Vista with Service Pack&nbsp;1 (SP1)and later and 
					onWindows Server&nbsp;2008 and later. One additional member was 
					added to this structure. The <strong>Length</strong> member 
					of the <strong>IP_ADAPTER_ADDRESSES</strong> structure 
					returned in the linked list of structures in the buffer 
					pointed to by the <em>AdapterAddresses</em> parameter should 
					be used to determine which version of the <strong>
					IP_ADAPTER_ADDRESSES</strong> structure is being used. </p>
					<p sizcache0647579587596997="3.718281828459045 2 140" sizset="false">
					The
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa365949(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">GetIpAddrTable</strong></a> 
					function retrieves the interface–to–IPv4 address mapping 
					table on a local computer and returns this information in an
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366847(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">MIB_IPADDRTABLE</strong></a> 
					structure.</p>
					<p>On the Platform Software Development Kit (SDK) released 
					for Windows Server&nbsp;2003 and earlier, the return value for 
					the <strong>GetAdaptersAddresses</strong> function was 
					defined as a <strong>DWORD</strong>, rather than a <strong>
					ULONG</strong>.</p>
					<p sizcache0647579587596997="3.718281828459045 2 142" sizset="false">
					The
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/ms740507(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">SOCKET_ADDRESS</strong></a> 
					structure is used in the
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">
					IP_ADAPTER_ADDRESSES</strong></a> structure pointed to by 
					the <em>AdapterAddresses</em> parameter. On the Microsoft 
					Windows Software Development Kit (SDK) released for 
					Windows&nbsp;Vista and later, the organization of header files 
					has changed and the <strong>SOCKET_ADDRESS</strong> 
					structure is defined in the <em>Ws2def.h</em> header file 
					which is automatically included by the <em>Winsock2.h</em> 
					header file. On the Platform SDK released for Windows 
					Server&nbsp;2003 and Windows&nbsp;XP, the <strong>SOCKET_ADDRESS</strong> 
					structure is declared in the <em>Winsock2.h</em> header 
					file. In order to use the <strong>IP_ADAPTER_ADDRESSES</strong> 
					structure, the <em>Winsock2.h</em> header file must be 
					included before the <em>Iphlpapi.h</em> header file. </p>
					<h2>Examples</h2>
					<p sizcache0647579587596997="3.718281828459045 2 144" sizset="false">
					This example retrieves the
					<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
					<strong xmlns="http://www.w3.org/1999/xhtml">
					IP_ADAPTER_ADDRESSES</strong></a> structure for the adapters 
					associated with the system and prints some members for each 
					adapter interface.</p>
					<div id="code-snippet-2" class="codeSnippetContainer" xmlns="" sizcache0647579587596997="3.718281828459045 2 145" sizset="false">
						<div class="codeSnippetContainerTabs" sizcache0647579587596997="3.718281828459045 2 145" sizset="false">
							<div dir="ltr" class="codeSnippetContainerTabSingle" sizcache0647579587596997="3.718281828459045 2 145" sizset="false">
								<a>C++</a></div>
						</div>
						<div class="codeSnippetContainerCodeContainer" sizcache0647579587596997="3.718281828459045 2 146" sizset="false">
							<div class="codeSnippetToolBar" sizcache0647579587596997="3.718281828459045 2 146" sizset="false">
								<div class="codeSnippetToolBarText" sizcache0647579587596997="3.718281828459045 2 146" sizset="false">
									<a style="display: none" title="复制到剪贴板。" name="CodeSnippetCopyLink" href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_b33716dc-cb3d-4995-bca6-ff1271a53093');">
									复制</a> </div>
							</div>
							<div dir="ltr" id="CodeSnippetContainerCode_b33716dc-cb3d-4995-bca6-ff1271a53093" class="codeSnippetContainerCode">
								<div style="color: black">
									<pre>#include &lt;winsock2.h&gt;
#include &lt;iphlpapi.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

<span style="color: green">// Link with Iphlpapi.lib</span>
#pragma comment(lib, <span style="color: #a31515">"IPHLPAPI.lib"</span>)

#define WORKING_BUFFER_SIZE 15000
#define MAX_TRIES 3

#define MALLOC(x) HeapAlloc(GetProcessHeap(), 0, (x))
#define FREE(x) HeapFree(GetProcessHeap(), 0, (x))

<span style="color: green">/* Note: could also use malloc() and free() */</span>

<span style="color: blue">int</span> __cdecl main(<span style="color: blue">int</span> argc, <span style="color: blue">char</span> **argv)
{

    <span style="color: green">/* Declare and initialize variables */</span>

    DWORD dwSize = 0;
    DWORD dwRetVal = 0;

    <span style="color: blue">unsigned</span> <span style="color: blue">int</span> i = 0;

    <span style="color: green">// Set the flags to pass to GetAdaptersAddresses</span>
    ULONG flags = GAA_FLAG_INCLUDE_PREFIX;

    <span style="color: green">// default to unspecified address family (both)</span>
    ULONG family = AF_UNSPEC;

    LPVOID lpMsgBuf = NULL;

    PIP_ADAPTER_ADDRESSES pAddresses = NULL;
    ULONG outBufLen = 0;
    ULONG Iterations = 0;

    PIP_ADAPTER_ADDRESSES pCurrAddresses = NULL;
    PIP_ADAPTER_UNICAST_ADDRESS pUnicast = NULL;
    PIP_ADAPTER_ANYCAST_ADDRESS pAnycast = NULL;
    PIP_ADAPTER_MULTICAST_ADDRESS pMulticast = NULL;
    IP_ADAPTER_DNS_SERVER_ADDRESS *pDnServer = NULL;
    IP_ADAPTER_PREFIX *pPrefix = NULL;

    <span style="color: blue">if</span> (argc != 2) {
        printf(<span style="color: #a31515">" Usage: getadapteraddresses family\n"</span>);
        printf(<span style="color: #a31515">"        getadapteraddresses 4 (for IPv4)\n"</span>);
        printf(<span style="color: #a31515">"        getadapteraddresses 6 (for IPv6)\n"</span>);
        printf(<span style="color: #a31515">"        getadapteraddresses A (for both IPv4 and IPv6)\n"</span>);
        exit(1);
    }

    <span style="color: blue">if</span> (atoi(argv[1]) == 4)
        family = AF_INET;
    <span style="color: blue">else</span> <span style="color: blue">if</span> (atoi(argv[1]) == 6)
        family = AF_INET6;

    printf(<span style="color: #a31515">"Calling GetAdaptersAddresses function with family = "</span>);
    <span style="color: blue">if</span> (family == AF_INET)
        printf(<span style="color: #a31515">"AF_INET\n"</span>);
    <span style="color: blue">if</span> (family == AF_INET6)
        printf(<span style="color: #a31515">"AF_INET6\n"</span>);
    <span style="color: blue">if</span> (family == AF_UNSPEC)
        printf(<span style="color: #a31515">"AF_UNSPEC\n\n"</span>);

    <span style="color: green">// Allocate a 15 KB buffer to start with.</span>
    outBufLen = WORKING_BUFFER_SIZE;

    <span style="color: blue">do</span> {

        pAddresses = (IP_ADAPTER_ADDRESSES *) MALLOC(outBufLen);
        <span style="color: blue">if</span> (pAddresses == NULL) {
            printf
                (<span style="color: #a31515">"Memory allocation failed for IP_ADAPTER_ADDRESSES struct\n"</span>);
            exit(1);
        }

        dwRetVal =
            GetAdaptersAddresses(family, flags, NULL, pAddresses, &amp;outBufLen);

        <span style="color: blue">if</span> (dwRetVal == ERROR_BUFFER_OVERFLOW) {
            FREE(pAddresses);
            pAddresses = NULL;
        } <span style="color: blue">else</span> {
            <span style="color: blue">break</span>;
        }

        Iterations++;

    } <span style="color: blue">while</span> ((dwRetVal == ERROR_BUFFER_OVERFLOW) &amp;&amp; (Iterations &lt; MAX_TRIES));

    <span style="color: blue">if</span> (dwRetVal == NO_ERROR) {
        <span style="color: green">// If successful, output some information from the data we received</span>
        pCurrAddresses = pAddresses;
        <span style="color: blue">while</span> (pCurrAddresses) {
            printf(<span style="color: #a31515">"\tLength of the IP_ADAPTER_ADDRESS struct: %ld\n"</span>,
                   pCurrAddresses-&gt;Length);
            printf(<span style="color: #a31515">"\tIfIndex (IPv4 interface): %u\n"</span>, pCurrAddresses-&gt;IfIndex);
            printf(<span style="color: #a31515">"\tAdapter name: %s\n"</span>, pCurrAddresses-&gt;AdapterName);

            pUnicast = pCurrAddresses-&gt;FirstUnicastAddress;
            <span style="color: blue">if</span> (pUnicast != NULL) {
                <span style="color: blue">for</span> (i = 0; pUnicast != NULL; i++)
                    pUnicast = pUnicast-&gt;Next;
                printf(<span style="color: #a31515">"\tNumber of Unicast Addresses: %d\n"</span>, i);
            } <span style="color: blue">else</span>
                printf(<span style="color: #a31515">"\tNo Unicast Addresses\n"</span>);

            pAnycast = pCurrAddresses-&gt;FirstAnycastAddress;
            <span style="color: blue">if</span> (pAnycast) {
                <span style="color: blue">for</span> (i = 0; pAnycast != NULL; i++)
                    pAnycast = pAnycast-&gt;Next;
                printf(<span style="color: #a31515">"\tNumber of Anycast Addresses: %d\n"</span>, i);
            } <span style="color: blue">else</span>
                printf(<span style="color: #a31515">"\tNo Anycast Addresses\n"</span>);

            pMulticast = pCurrAddresses-&gt;FirstMulticastAddress;
            <span style="color: blue">if</span> (pMulticast) {
                <span style="color: blue">for</span> (i = 0; pMulticast != NULL; i++)
                    pMulticast = pMulticast-&gt;Next;
                printf(<span style="color: #a31515">"\tNumber of Multicast Addresses: %d\n"</span>, i);
            } <span style="color: blue">else</span>
                printf(<span style="color: #a31515">"\tNo Multicast Addresses\n"</span>);

            pDnServer = pCurrAddresses-&gt;FirstDnsServerAddress;
            <span style="color: blue">if</span> (pDnServer) {
                <span style="color: blue">for</span> (i = 0; pDnServer != NULL; i++)
                    pDnServer = pDnServer-&gt;Next;
                printf(<span style="color: #a31515">"\tNumber of DNS Server Addresses: %d\n"</span>, i);
            } <span style="color: blue">else</span>
                printf(<span style="color: #a31515">"\tNo DNS Server Addresses\n"</span>);

            printf(<span style="color: #a31515">"\tDNS Suffix: %wS\n"</span>, pCurrAddresses-&gt;DnsSuffix);
            printf(<span style="color: #a31515">"\tDescription: %wS\n"</span>, pCurrAddresses-&gt;Description);
            printf(<span style="color: #a31515">"\tFriendly name: %wS\n"</span>, pCurrAddresses-&gt;FriendlyName);

            <span style="color: blue">if</span> (pCurrAddresses-&gt;PhysicalAddressLength != 0) {
                printf(<span style="color: #a31515">"\tPhysical address: "</span>);
                <span style="color: blue">for</span> (i = 0; i &lt; (<span style="color: blue">int</span>) pCurrAddresses-&gt;PhysicalAddressLength;
                     i++) {
                    <span style="color: blue">if</span> (i == (pCurrAddresses-&gt;PhysicalAddressLength - 1))
                        printf(<span style="color: #a31515">"%.2X\n"</span>,
                               (<span style="color: blue">int</span>) pCurrAddresses-&gt;PhysicalAddress[i]);
                    <span style="color: blue">else</span>
                        printf(<span style="color: #a31515">"%.2X-"</span>,
                               (<span style="color: blue">int</span>) pCurrAddresses-&gt;PhysicalAddress[i]);
                }
            }
            printf(<span style="color: #a31515">"\tFlags: %ld\n"</span>, pCurrAddresses-&gt;Flags);
            printf(<span style="color: #a31515">"\tMtu: %lu\n"</span>, pCurrAddresses-&gt;Mtu);
            printf(<span style="color: #a31515">"\tIfType: %ld\n"</span>, pCurrAddresses-&gt;IfType);
            printf(<span style="color: #a31515">"\tOperStatus: %ld\n"</span>, pCurrAddresses-&gt;OperStatus);
            printf(<span style="color: #a31515">"\tIpv6IfIndex (IPv6 interface): %u\n"</span>,
                   pCurrAddresses-&gt;Ipv6IfIndex);
            printf(<span style="color: #a31515">"\tZoneIndices (hex): "</span>);
            <span style="color: blue">for</span> (i = 0; i &lt; 16; i++)
                printf(<span style="color: #a31515">"%lx "</span>, pCurrAddresses-&gt;ZoneIndices[i]);
            printf(<span style="color: #a31515">"\n"</span>);

            printf(<span style="color: #a31515">"\tTransmit link speed: %I64u\n"</span>, pCurrAddresses-&gt;TransmitLinkSpeed);
            printf(<span style="color: #a31515">"\tReceive link speed: %I64u\n"</span>, pCurrAddresses-&gt;ReceiveLinkSpeed);

            pPrefix = pCurrAddresses-&gt;FirstPrefix;
            <span style="color: blue">if</span> (pPrefix) {
                <span style="color: blue">for</span> (i = 0; pPrefix != NULL; i++)
                    pPrefix = pPrefix-&gt;Next;
                printf(<span style="color: #a31515">"\tNumber of IP Adapter Prefix entries: %d\n"</span>, i);
            } <span style="color: blue">else</span>
                printf(<span style="color: #a31515">"\tNumber of IP Adapter Prefix entries: 0\n"</span>);

            printf(<span style="color: #a31515">"\n"</span>);

            pCurrAddresses = pCurrAddresses-&gt;Next;
        }
    } <span style="color: blue">else</span> {
        printf(<span style="color: #a31515">"Call to GetAdaptersAddresses failed with error: %d\n"</span>,
               dwRetVal);
        <span style="color: blue">if</span> (dwRetVal == ERROR_NO_DATA)
            printf(<span style="color: #a31515">"\tNo addresses were found for the requested parameters\n"</span>);
        <span style="color: blue">else</span> {

            <span style="color: blue">if</span> (FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |
                    FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS, 
                    NULL, dwRetVal, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),   
                    <span style="color: green">// Default language</span>
                    (LPTSTR) &amp; lpMsgBuf, 0, NULL)) {
                printf(<span style="color: #a31515">"\tError: %s"</span>, lpMsgBuf);
                LocalFree(lpMsgBuf);
                <span style="color: blue">if</span> (pAddresses)
                    FREE(pAddresses);
                exit(1);
            }
        }
    }

    <span style="color: blue">if</span> (pAddresses) {
        FREE(pAddresses);
    }

    <span style="color: blue">return</span> 0;
}


</pre>
								</div>
							</div>
						</div>
					</div>
					<h2>Requirements</h2>
					<table>
						<tr>
							<th>Minimum supported client</th>
							<td>Windows&nbsp;XP [desktop apps only]</td>
						</tr>
						<tr>
							<th>Minimum supported server</th>
							<td>Windows Server&nbsp;2003 [desktop apps only]</td>
						</tr>
						<tr>
							<th>Header</th>
							<td>
							<dl>
								<dt>Iphlpapi.h</dt>
							</dl>
							</td>
						</tr>
						<tr>
							<th>Library</th>
							<td>
							<dl>
								<dt>Iphlpapi.lib</dt>
							</dl>
							</td>
						</tr>
						<tr>
							<th>DLL</th>
							<td>
							<dl>
								<dt>Iphlpapi.dll</dt>
							</dl>
							</td>
						</tr>
					</table>
					<h2 sizcache0647579587596997="3.718281828459045 2 147" sizset="false">
					<a id="see_also"></a>See also</h2>
					<dl sizcache0647579587596997="3.718281828459045 2 148" sizset="false">
						<dt sizcache0647579587596997="3.718281828459045 2 148" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366073(v=vs.85).aspx">
						IP Helper Start Page</a> </dt>
						<dt sizcache0647579587596997="3.718281828459045 2 149" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366072(v=vs.85).aspx">
						IP Helper Function Reference</a> </dt>
						<dt sizcache0647579587596997="3.718281828459045 2 150" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/ms740673(v=vs.85).aspx">
						Windows Sockets</a> </dt>
						<dt sizcache0647579587596997="3.718281828459045 2 151" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa365949(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">
						GetIpAddrTable</strong></a> </dt>
						<dt sizcache0647579587596997="3.718281828459045 2 152" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366597(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">HeapAlloc</strong></a>
						</dt>
						<dt sizcache0647579587596997="3.718281828459045 2 153" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366701(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">HeapFree</strong></a>
						</dt>
						<dt sizcache0647579587596997="3.718281828459045 2 154" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366058(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">
						IP_ADAPTER_ADDRESSES</strong></a> </dt>
						<dt sizcache0647579587596997="3.718281828459045 2 155" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/aa366847(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">
						MIB_IPADDRTABLE</strong></a> </dt>
						<dt sizcache0647579587596997="3.718281828459045 2 156" sizset="false">
						<a href="https://msdn.microsoft.com/zh-cn/library/windows/desktop/ms740507(v=vs.85).aspx">
						<strong xmlns="http://www.w3.org/1999/xhtml">
						SOCKET_ADDRESS</strong></a> </dt>
					</dl>
				</div>
			</div>
		</div>
	</div>
</div>

			<!-- #EndEditable --></div>
		<!--Main Content Area Ends Here--></div>
	<!-- Columns Container ends here -->
	<!-- Footer begins here -->
	<div id="footer">
		
		<p class="smltxt">模板来自于:
		<a href="http://www.genealogy-web-creations.com/" title="Genealogy Web Creations.">
		Genealogy Web Creations</a> </p>
		<p class="smltxt">Template Updated: May 2015 </p>
		<p class="smltxt"><a href="http://www.miitbeian.gov.cn/" title="备案后">京ICP备15041520号</a></p>
	</div>
	<!-- Footer ends here -->
	<!-- Page Container ends here --></div>

</body>

<!-- #EndTemplate -->

</html>
